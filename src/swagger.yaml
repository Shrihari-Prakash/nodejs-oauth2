openapi: 3.0.0
info:
  title: Liquid
  description: Seamless authentication and user management APIs for your projects based on TypeScript, MongoDB and Redis.
  version: 0.1
paths:
  /user/admin-api/access:
    post:
      security:
        - bearerAuth: []
      summary: Provide access to an admin API for the given users.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targets:
                  type: array
                  items:
                    type: string
                permissions:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /user/admin-api/user:
    patch:
      security:
        - bearerAuth: []
      summary: Updates the specified fields of the user profile specified as target.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
                username:
                  type: string
                firstName:
                  type: string
                middleName:
                  type: string
                lastName:
                  type: string
                password:
                  type: string
                isBanned:
                  type: boolean
                isRestricted:
                  type: boolean
                deleted:
                  type: boolean
                role:
                  type: string
      responses:
        "200": # status code
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      ok:
                        type: boolean
  /user/admin-api/editable-fields:
    get:
      security:
        - bearerAuth: []
      summary: Retrieves the user fields that can be edited by the admin user.
      responses:
        "200": # status code
          description: Returns a list of field names.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      editableFields:
                        type: array
                        items:
                          type: string
  /user/client-api/user-info:
    get:
      security:
        - bearerAuth: []
      summary: Accepts an array of user IDs and returns their profile details.
      parameters:
        - in: query
          name: targets
          schema:
            type: string
          description: Comma seperated list of user IDs for which info has to be retrieved.
      responses:
        "200":
          description: Returns an array of objects with user details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: "#/definitions/user"
  /user/client-api/block-status:
    get:
      security:
        - bearerAuth: []
      summary: Returns if a given source user is has blocked the given target user.
      parameters:
        - in: query
          name: source
          schema:
            type: integer
          description: ID of the source user.
        - in: query
          name: target
          schema:
            type: integer
          description: ID of the target user.
      responses:
        "200":
          description: Returns the block status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      following:
                        type: boolean
  /user/client-api/follow-status:
    get:
      security:
        - bearerAuth: []
      summary: Returns if a given source user is following the given target user.
      parameters:
        - in: query
          name: source
          schema:
            type: integer
          description: ID of the source user.
        - in: query
          name: target
          schema:
            type: integer
          description: ID of the target user.
      responses:
        "200":
          description: Returns the follow status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      following:
                        type: boolean
  /user/client-api/user-following:
    get:
      security:
        - bearerAuth: []
      summary: Returns an array of users that the user with the given user ID is following.
      parameters:
        - in: query
          name: target
          schema:
            type: integer
          description: ID of the user.
      responses:
        "200":
          description: Returns list of users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      records:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            approved:
                              type: boolean
                            target:
                              $ref: "#/definitions/user"
  /user/client-api/user-followers:
    get:
      security:
        - bearerAuth: []
      summary: Returns an array of users that are following a given user ID.
      parameters:
        - in: query
          name: target
          schema:
            type: integer
          description: ID of the user.
      responses:
        "200":
          description: Returns list of users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      records:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            approved:
                              type: boolean
                            source:
                              $ref: "#/definitions/user"
  /user/client-api/banned:
    post:
      security:
        - bearerAuth: []
      summary: Marks the user with given ID as banned.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
                state:
                  type: string
      responses:
        "200":
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /user/create:
    post:
      summary: Creates an user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    user:
                      $ref: "#/definitions/user"
      responses:
        "200":
          description: Returns the user details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ...:
                    type: string
  /user/login:
    post:
      summary: Creates a cookie session and returns the user profile.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Returns the user profile.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        $ref: "#/definitions/user"
  /user/verify-email:
    post:
      summary: Marks the user's account associated with the auto generated code as a verified.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
      responses:
        "200":
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /user/code:
    get:
      summary: Generates a code to initiate a password reset.
      parameters:
        - in: query
          name: email
          schema:
            type: string
          description: Email ID of the user.
      responses:
        "200":
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /user/reset-password:
    post:
      security:
        - bearerAuth: []
      summary: Change the password of the user who initiated password reset in GET /user/code.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /user/private:
    post:
      security:
        - bearerAuth: []
      summary: Changes an user account's type to private/public.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: boolean
      responses:
        "200":
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /user/me:
    get:
      security:
        - bearerAuth: []
      summary: Retrieves the user profile associated with the API token.
      responses:
        "200": # status code
          description: Returns the user details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        $ref: "#/definitions/user"
                      editableFields:
                        type: array
                        items:
                          type: string

    patch:
      security:
        - bearerAuth: []
      summary: Updates the specified fields of the user profile associated with the API token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                middleName:
                  type: string
                lastName:
                  type: string
                password:
                  type: string
                bio:
                  type: string
      responses:
        "200": # status code
          description: Returns the user details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      ok:
                        type: boolean
  /user/:userId:
    get:
      security:
        - bearerAuth: []
      summary: Retrieves the user data for a given user ID.
      responses:
        "200":
          description: Returns the user details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/definitions/user"
  /user/search:
    post:
      security:
        - bearerAuth: []
      summary: Search for users using a query string.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
      responses:
        "200":
          description: Returns list of users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: "#/definitions/user"
  /user/block:
    post:
      security:
        - bearerAuth: []
      summary: Blocks the user with the provided ID from the account associated with the API token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
      responses:
        "200":
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /user/unblock:
    post:
      security:
        - bearerAuth: []
      summary: Unblocks the user with the provided ID from the account associated with the API token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
      responses:
        "200":
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /user/follow:
    post:
      security:
        - bearerAuth: []
      summary: Follows the user with the provided ID from the account associated with the API token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
      responses:
        "200":
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /user/unfollow:
    post:
      security:
        - bearerAuth: []
      summary: Unfollows the user with the given ID from the account associated with the API token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
      responses:
        "200":
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /user/accept-follow-request:
    post:
      security:
        - bearerAuth: []
      summary: Accept a follow request by ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  type: string
      responses:
        "200":
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /user/follow-entry:
    delete:
      security:
        - bearerAuth: []
      summary: Delete a follow entry by ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
      responses:
        "200":
          description: Returns OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /user/following:
    get:
      security:
        - bearerAuth: []
      summary: Returns an array of users that the user associated with the API token is following.
      responses:
        "200":
          description: Returns list of users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      records:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            approved:
                              type: boolean
                            target:
                              $ref: "#/definitions/user"
  /user/followers:
    get:
      security:
        - bearerAuth: []
      summary: Returns an array of users that are following the user associated with the API token.
      responses:
        "200":
          description: Returns list of users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      records:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            approved:
                              type: boolean
                            source:
                              $ref: "#/definitions/user"
  /user/follow-requests:
    get:
      security:
        - bearerAuth: []
      summary: Returns an array of users that have requested to follow the user associated with the API token.
      responses:
        "200":
          description: Returns list of follow requests.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      records:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            approved:
                              type: boolean
                            source:
                              $ref: "#/definitions/user"
  /user/follow-status:
    get:
      security:
        - bearerAuth: []
      summary: Returns if the current user is following the given target user.
      parameters:
        - in: query
          name: target
          schema:
            type: integer
          description: ID of the target user.
      responses:
        "200":
          description: Returns the follow status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      following:
                        type: boolean
                      requested:
                        type: boolean

definitions:
  user:
    type: object
    properties:
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      username:
        type: string
      role:
        type: string
      profilePictureUrl:
        type: string
      followingCount:
        type: string
      followerCount:
        type: string
      isPrivate:
        type: string
      email:
        type: string
      phone:
        type: string
      isFollowing:
        type: boolean
      requested:
        type: boolean
