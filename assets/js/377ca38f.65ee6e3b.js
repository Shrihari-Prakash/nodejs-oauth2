"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[661],{8251:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var t=i(4848),o=i(8453);const r={slug:"/",title:"Intro"},s="Liquid",a={id:"Intro",title:"Intro",description:"Seamless and highly customizable authentication and user management server for any project. \u2728",source:"@site/docs/Intro.md",sourceDirName:".",slug:"/",permalink:"/liquid/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{slug:"/",title:"Intro"},sidebar:"tutorialSidebar",next:{title:"Setup",permalink:"/liquid/Setup"}},c={},d=[{value:"Seamless and highly customizable authentication and user management server for any project. \u2728",id:"seamless-and-highly-customizable-authentication-and-user-management-server-for-any-project-",level:2},{value:"Connecting Your Frontend Application to Liquid Quickstart Instance",id:"connecting-your-frontend-application-to-liquid-quickstart-instance",level:2},{value:"Nitrogen Configuration",id:"nitrogen-configuration",level:3},{value:"Test connectivity",id:"test-connectivity",level:3},{value:"Demo user",id:"demo-user",level:2},{value:"Connecting Your Backend Service to Liquid Quickstart Instance",id:"connecting-your-backend-service-to-liquid-quickstart-instance",level:2},{value:"API Documentation",id:"api-documentation",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"liquid",children:"Liquid"})}),"\n",(0,t.jsx)(n.h2,{id:"seamless-and-highly-customizable-authentication-and-user-management-server-for-any-project-",children:"Seamless and highly customizable authentication and user management server for any project. \u2728"}),"\n",(0,t.jsx)(n.p,{children:"Liquid is a Docker-based open-source authentication server that supercharges your product development by offering out of the box APIs for features like follow-unfollow, blocking, and banning so that you can focus on just your application logic. \ud83d\ude80"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://github.com/shrihari-prakash/liquid/raw/main/images/liquid-banner.png",alt:""})}),"\n",(0,t.jsx)(n.p,{children:"Think of Liquid like integrating a readymade authentication and user management server with your own codebase. You just boot up Liquid in a docker container with a few configuration files and it is all good to go."}),"\n",(0,t.jsxs)(n.p,{children:["For setting up Liquid, refer to the ",(0,t.jsx)(n.a,{href:"/Setup",children:"Setup"})," page."]}),"\n",(0,t.jsx)(n.h1,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(n.admonition,{type:"danger",children:(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["You should NEVER use the Quickstart for production deployments. For production usage, please follow the ",(0,t.jsx)(n.a,{href:"/Setup",children:"Setup"})," page and then refer to the ",(0,t.jsx)(n.a,{href:"/Making-Liquid-Production-Ready",children:"Production Guide"}),"."]})})}),"\n",(0,t.jsx)(n.p,{children:"If you're looking for the quickest and most convenient way to run Liquid without installing manually the dependencies for database and cache by yourself, do the following:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Run"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"curl -sSL --insecure https://raw.githubusercontent.com/shrihari-prakash/liquid/main/quickstart/docker-compose.yaml > docker-compose.yaml\ncurl -sSL --insecure https://raw.githubusercontent.com/shrihari-prakash/liquid/main/quickstart/app-config.service.json > app-config.service.json\ncurl -sSL --insecure https://raw.githubusercontent.com/shrihari-prakash/liquid/main/quickstart/app-config.static.json > app-config.static.json\n"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["In the ",(0,t.jsx)(n.code,{children:"app-config.service.json"})," file, add your frontend origin in ",(0,t.jsx)(n.code,{children:"cors.allowed-origins"})," array."]}),"\n",(0,t.jsxs)(n.li,{children:["Run ",(0,t.jsx)(n.code,{children:"docker-compose up -d"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This is useful if you want to try and evaluate Liquid to see if it fits your needs or to locally develop your apps with Liquid."}),"\n",(0,t.jsx)(n.h2,{id:"connecting-your-frontend-application-to-liquid-quickstart-instance",children:"Connecting Your Frontend Application to Liquid Quickstart Instance"}),"\n",(0,t.jsx)(n.p,{children:"For Liquid to securely allow your frontend to authenticate, you will need to update your frontend domain in a few places:"}),"\n",(0,t.jsx)(n.h3,{id:"nitrogen-configuration",children:"Nitrogen Configuration"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Login to the ",(0,t.jsx)(n.a,{href:"http://localhost:2001",children:"Nitrogen admin panel"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Navigate to the ",(0,t.jsx)(n.code,{children:"Applications"})," tab."]}),"\n",(0,t.jsx)(n.li,{children:"Click the Edit button."}),"\n",(0,t.jsx)(n.li,{children:"In the redirect URIs section, add your frontend origin."}),"\n",(0,t.jsx)(n.li,{children:"Press Enter."}),"\n",(0,t.jsx)(n.li,{children:"Click Save."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"test-connectivity",children:"Test connectivity"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Navigate to ",(0,t.jsx)(n.a,{href:"http://localhost:2000?redirect_uri=https://your-frontend.origin",children:"http://localhost:2000?redirect_uri=https://your-frontend.origin"})]}),"\n",(0,t.jsx)(n.li,{children:"Enter the login details and click on Login."}),"\n",(0,t.jsx)(n.li,{children:"You are now navigated back to your application with the state and code parameters in the URL."}),"\n",(0,t.jsxs)(n.li,{children:["Refer to ",(0,t.jsx)(n.a,{href:"/api-documentation/API-Documentation-OAuth-2.0#access-token-from-authorization-code",children:"this section"})," to see how to get an access token from the code in URL to call Liquid APIs."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:['The Quickstart script by default runs in "Demo Mode", which means, an application and a user is already created for you so that you can jump straight into evaluating Liquid with zero configuration. The script also comes with the ',(0,t.jsx)(n.a,{href:"https://github.com/shrihari-prakash/nitrogen",children:"Nitrogen admin panel"})," preconfigured. You can manage users and permissions by navigating to ",(0,t.jsx)(n.a,{href:"http://localhost:2001",children:"http://localhost:2001"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"demo-user",children:"Demo user"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Username:"})," liquid_demo"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Password:"})," liquid_demo"]}),"\n",(0,t.jsx)(n.admonition,{type:"danger",children:(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Again, you should NEVER use the Quickstart for production deployments. For production usage, please follow the ",(0,t.jsx)(n.a,{href:"/Setup",children:"Setup"})," page and then refer to the ",(0,t.jsx)(n.a,{href:"/Making-Liquid-Production-Ready",children:"Production Guide"}),"."]})})}),"\n",(0,t.jsx)(n.h2,{id:"connecting-your-backend-service-to-liquid-quickstart-instance",children:"Connecting Your Backend Service to Liquid Quickstart Instance"}),"\n",(0,t.jsxs)(n.p,{children:["Refer to ",(0,t.jsx)(n.a,{href:"/Understanding-Access-Control-and-Integrating-with-Other-Microservices",children:"this section"})," to find out how to authenticate users connecting to your service using Liquid."]}),"\n",(0,t.jsx)(n.h2,{id:"api-documentation",children:"API Documentation"}),"\n",(0,t.jsxs)(n.p,{children:["Get started with the APIs ",(0,t.jsx)(n.a,{href:"/api-documentation/API-Documentation-OAuth-2.0",children:"here"})]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var t=i(6540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);